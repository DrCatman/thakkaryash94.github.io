{"version":3,"sources":["webpack:///./src/components/repoCard.js","webpack:///./src/components/projects.js","webpack:///./src/components/topicCard.js","webpack:///./src/components/interests.js","webpack:///./src/components/thoughts.js","webpack:///./src/components/seo.js","webpack:///./src/pages/index.js","webpack:///./src/hooks/siteMetaData.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/mastHead.js","webpack:///./src/components/postCard.js"],"names":["RepoCard","_ref","repository","style","useContext","ThemeContext","state","react_default","a","createElement","className","href","url","owner","login","name","lib_default","text","description","viewBox","version","width","height","aria-hidden","fillRule","d","stargazers","totalCount","forkCount","Projects","repositories","_429528887","data","github","viewer","Fragment","nodes","map","i","key","repoCard","TopicCard","topic","web_url","image_url","src","alt","lineHeight","Topics","topics","_3437423187","allDataYaml","edges","node","topicCard","Thoughts","_867079123","allMarkdownRemark","length","edge","index","postCard","post","SEO","_818537987","Helmet_default","htmlAttributes","lang","title","IndexPage","_useContext","layout","dispatch","useSiteMetadata","components_layout","seo","mastHead","metaData","projects","interests","thoughts","backgroundColor","maxWidth","_public_static_d_2808470306_json__WEBPACK_IMPORTED_MODULE_0__","site","siteMetadata","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","__webpack_exports__","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","propTypes","shape","_hooks_siteMetaData__WEBPACK_IMPORTED_MODULE_1__","_theme_context__WEBPACK_IMPORTED_MODULE_2__","Layout","children","_useContext$state","stateStyle","theme","type","value","useEffect","document","body","background","user","_public_static_d_2371697785_json__WEBPACK_IMPORTED_MODULE_1__","metadata_styles","react__WEBPACK_IMPORTED_MODULE_2___default","avatarUrl","react_emoji_render__WEBPACK_IMPORTED_MODULE_3___default","bio","color","iconColor","_githubprimer_octicons_react__WEBPACK_IMPORTED_MODULE_4__","icon","MarkGithub","size","verticalAlign","ariaLabel","email","Mail","Location","isHireable","formatePostDate","gatsby__WEBPACK_IMPORTED_MODULE_1__","dateString","date","Date","toLocaleDateString","month","day","year","PostCard","to","fields","slug","frontmatter","postDate"],"mappings":"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","file":"component---src-pages-index-js-6f8c7102563520cc821d.js","sourcesContent":["import React, { useContext } from 'react'\nimport Emoji from 'react-emoji-render'\nimport { ThemeContext } from \"../theme-context\"\n\nfunction RepoCard({ repository }) {\n  const { state: { style } } = useContext(ThemeContext)\n  return (\n    <div className={`github-component height-full text-left ${style === 'dark' ? 'box-shadow' : 'border border-gray-light'} bg-white rounded-1 p-3`}>\n      <div className=\"d-flex flex-justify-between flex-items-start mb-1\">\n        <h1 className=\"f4 lh-condensed mb-1\">\n          <a href={repository.url}>\n            <span className=\"text-normal\">{repository.owner.login} /</span>\n            {repository.name}\n          </a>\n        </h1>\n      </div>\n      <div className=\"text-gray mb-2 ws-normal\"><Emoji text={repository.description || ''} /></div>\n      <div className=\"d-flex f6\">\n        <a href={repository.url} className=\"d-inline-block link-gray mr-4\">\n          <svg className=\"octicon octicon-star mr-1\" viewBox=\"0 0 14 16\" version=\"1.1\" width=\"14\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z\"></path></svg>{repository.stargazers.totalCount}\n        </a>\n        <a href={repository.url} className=\"d-inline-block link-gray mr-4\">\n          <svg className=\"octicon octicon-git-branch mr-1\" viewBox=\"0 0 10 16\" version=\"1.1\" width=\"10\" height=\"16\" aria-hidden=\"true\"><path fillRule=\"evenodd\" d=\"M10 5c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v.3c-.02.52-.23.98-.63 1.38-.4.4-.86.61-1.38.63-.83.02-1.48.16-2 .45V4.72a1.993 1.993 0 0 0-1-3.72C.88 1 0 1.89 0 3a2 2 0 0 0 1 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2 1.11 0 2-.89 2-2 0-.53-.2-1-.53-1.36.09-.06.48-.41.59-.47.25-.11.56-.17.94-.17 1.05-.05 1.95-.45 2.75-1.25S8.95 7.77 9 6.73h-.02C9.59 6.37 10 5.73 10 5zM2 1.8c.66 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2C1.35 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2zm0 12.41c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm6-8c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z\"></path></svg>{repository.forkCount}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default RepoCard\n","import React, { useContext } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport RepoCard from \"./repoCard\"\nimport { ThemeContext } from \"../theme-context\"\n\nfunction Projects() {\n  const { state: { style } } = useContext(ThemeContext)\n  const { github: { viewer: { repositories } } } = useStaticQuery(\n    graphql`\n      query {\n        github {\n          viewer {\n            repositories(privacy: PUBLIC, affiliations: OWNER, first: 9, orderBy: {field: CREATED_AT, direction: DESC}) {\n              nodes {\n                owner {\n                  login\n                }\n                name\n                url\n                description\n                stargazers {\n                  totalCount\n                }\n                forkCount\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  return (\n    <>\n      <h2 className={style === 'dark' ? \"text-white\" : \"\"}>My Projects</h2>\n      <p className={`f4 mb-4 ${style === 'dark' ? 'text-white' : 'text-gray'}`}>GitHub repositories that I've built.</p>\n      <div className=\"d-sm-flex flex-wrap gutter-condensed mb-4\">\n        {repositories.nodes.map((repository, i) => (\n          <div key={i} className=\"col-sm-6 col-md-12 col-lg-6 col-xl-4 mb-3\">\n            <RepoCard repository={repository} />\n          </div>\n        ))}</div>\n    </>\n  )\n}\n\nexport default Projects\n","import React from 'react'\n\nfunction TopicCard({ topic }) {\n  return (\n    <>\n      {topic.web_url ?\n        <a href={topic.web_url} className=\"github-component position-relative hover-grow height-full no-underline d-flex flex-column flex-justify-center text-center border border-gray-light rounded-1 bg-white p-5\">\n          {topic.image_url ?\n            <img src={topic.image_url} width=\"64\" height=\"64\" className=\"mx-auto rounded-1 mb-3\" alt={topic.name} /> :\n            <div className=\"bg-blue-light f4 text-gray-light text-bold rounded-1 flex-shrink-0 text-center mx-auto mb-3\" style={{ width: '64px', 'height': '64px', lineHeight: '64px' }}>#</div>\n          }\n          <p className=\"f3 lh-condensed text-center link-gray-dark mb-0 mt-1\">{topic.name}</p>\n          {topic.description && <p className=\"f5 text-gray text-center mb-0 mt-1\">{topic.description}</p>}\n        </a> :\n        <div className=\"github-component position-relative height-full text-center border border-gray-light rounded-1 bg-white p-5\">\n          {topic.image_url ? <img src={topic.image_url} width=\"64\" height=\"64\" className=\"mx-auto rounded-1 mb-3\" alt={topic.name} />\n            : <div\n              className=\"bg-blue-light f4 text-gray-light text-bold rounded-1 flex-shrink-0 text-center mx-auto mb-3\"\n              style={{ width: '64px', height: '64px', lineHeight: '64px' }}>#</div>\n          }\n          <p className=\"f3 lh-condensed text-center mb-0 mt-1\">{topic.name}</p>\n          {topic.description && <p className=\"f5 text-gray text-center mb-0 mt-1\">{topic.description}</p>}\n        </div>\n      }\n    </>\n  )\n}\n\nexport default TopicCard\n","import React, { useContext } from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport TopicCard from \"./topicCard\"\nimport { ThemeContext } from \"../theme-context\"\n\nfunction Topics() {\n  const { state: { style } } = useContext(ThemeContext)\n  const { allDataYaml: { edges } } = useStaticQuery(\n    graphql`\n      query {\n        allDataYaml {\n          edges {\n            node {\n              topics {\n                name\n                web_url\n                image_url\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n  const topics = edges[0].node.topics\n  return (\n    <>\n      <h2 className={style === 'dark' ? \"text-white\" : \"\"}>My Interests</h2>\n      <p className={`f4 mb-4 ${style === 'dark' ? 'text-white' : 'text-gray'}`}>Topics that I want to learn more about.</p>\n      <div className=\"d-sm-flex flex-wrap gutter-condensed mb-4\">\n        {topics.map((topic, i) => (\n          <div key={i} className=\"col-sm-6 col-md-12 col-lg-6 col-xl-4 mb-3\">\n            <TopicCard topic={topic} />\n          </div>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Topics\n","import React, { useContext } from 'react'\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport PostCard from \"./postCard\"\nimport { ThemeContext } from \"../theme-context\"\n\nfunction Thoughts() {\n  const { state: { style } } = useContext(ThemeContext)\n  const { allMarkdownRemark: { edges } } = useStaticQuery(\n    graphql`\n      query {\n        allMarkdownRemark(limit: 6, filter: { frontmatter: { published: { eq: true } } }) {\n          edges {\n            node {\n              frontmatter {\n                title\n                published\n              }\n              fields {\n                slug\n                postDate\n              }\n              html\n            }\n          }\n        }\n      }\n    `\n  )\n  return edges.length > 0 ?\n    <>\n      <h2 className={style === 'dark' ? \"text-white\" : \"\"}>My Thoughts</h2>\n      <p className={`f4 mb-4 ${style === 'dark' ? 'text-white' : 'text-gray'}`}>Articles I've written.</p>\n      <div className=\"d-sm-flex flex-wrap gutter-condensed mb-4\">\n        {edges.map((edge, index) => (\n          <div key={index} className=\"col-sm-6 col-md-12 col-lg-6 col-xl-4 mb-3\">\n            <PostCard post={edge.node} />\n          </div>\n        ))}\n      </div>\n    </>\n    : null\n}\n\nexport default Thoughts\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO() {\n  const { github: { viewer: { name } } } = useStaticQuery(\n    graphql`\n      query {\n        github {\n          viewer {\n            name\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: 'en'\n      }}\n      title={name}\n    />\n  )\n}\n\nexport default SEO\n","import React, { useContext } from \"react\"\n\nimport Layout from \"../components/layout\"\nimport { ThemeContext } from \"../theme-context\"\nimport MastHead from '../components/mastHead'\nimport Projects from '../components/projects'\nimport Interests from '../components/interests'\nimport Thoughts from '../components/thoughts'\nimport SEO from '../components/seo'\nimport useSiteMetadata from '../hooks/siteMetaData'\n\nfunction IndexPage() {\n  const { state: { style }, dispatch } = useContext(ThemeContext)\n  const { layout } = useSiteMetadata()\n  return <Layout>\n    <SEO />\n    {layout === 'stacked' ?\n      <div className=\"container-lg py-6 p-responsive text-center\">\n        <MastHead metaData={true} />\n        <div className=\"my-6\">\n          <Projects />\n        </div>\n        <div className=\"my-6\">\n          <Interests />\n        </div>\n        <div className=\"my-6\">\n          <Thoughts />\n        </div>\n        {/* <button onClick={() => dispatch({ type: 'TOGGLE_THEME' })}>Theme</button> */}\n      </div> :\n      <div className={`d-md-flex ${style !== 'dark' && 'border-md-bottom'}`}>\n        <div className={`flex-self-stretch ${style === 'dark' ? 'bg-gray-dark' : 'border-md-right border-gray-light bg-white'} col-md-5 col-lg-4 col-xl-3 px-4 px-md-6 px-lg-7 py-6`}>\n          <MastHead metaData={true} />\n        </div>\n        <div className=\"col-md-7 col-lg-8 col-xl-9 px-4 py-6 px-lg-7 border-top border-md-top-0\" style={{ backgroundColor: style === 'dark' ? \"#2f363d\" : \"#fafbfc\" }}>\n          <div className=\"mx-auto\" style={{ maxWidth: '900px' }}>\n            <Projects />\n            <Interests />\n            <Thoughts />\n            {/* <button onClick={() => dispatch({ type: 'TOGGLE_THEME' })}>Theme</button> */}\n          </div>\n        </div>\n      </div>\n    }\n  </Layout>\n}\n\nexport default IndexPage\n","import { useStaticQuery, graphql } from 'gatsby'\n\nconst useSiteMetadata = () => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            style\n            layout\n          }\n        }\n      }\n    `\n  )\n  return site.siteMetadata\n}\n\nexport default useSiteMetadata\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React, { useContext, useEffect } from \"react\"\nimport useSiteMetadata from '../hooks/siteMetaData'\nimport { ThemeContext } from \"../theme-context\"\n\nimport \"./layout.scss\"\n\nfunction Layout({ children }) {\n  const { style } = useSiteMetadata()\n  const { state: { style: stateStyle, theme }, dispatch } = useContext(ThemeContext)\n  if (stateStyle !== style) {\n    dispatch({ type: 'CHANGE_THEME', value: style })\n  }\n  useEffect(\n    () => {\n      document.body.style.backgroundColor = theme.background\n    },\n    [theme.background]\n  )\n  return (\n    <main>{children}</main>\n  )\n}\n\n\nexport default Layout\n","import React, { useContext } from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Emoji from 'react-emoji-render'\nimport Octicon, { MarkGithub, Location, Mail } from '@githubprimer/octicons-react'\nimport useSiteMetadata from '../hooks/siteMetaData'\nimport { ThemeContext } from \"../theme-context\"\n\nfunction mastHead({ metaData }) {\n  const { state: { style, theme } } = useContext(ThemeContext)\n\n  const { layout } = useSiteMetadata()\n  const { github: { viewer: user } } = useStaticQuery(\n    graphql`\n      query {\n        github {\n          viewer {\n            name\n            email\n            bio\n            login\n            url\n            avatarUrl\n            isHireable\n            location\n          }\n        }\n      }\n    `\n  )\n  const metadata_styles = layout === 'stacked' ? 'd-md-inline-block mr-3' : 'd-flex flex-items-center mb-3'\n  return (\n    <>\n      <img src={user.avatarUrl} alt=\"user-avatar\" className=\"circle mb-3\" style={{ maxWidth: '150px' }} />\n      <h1 className={style === 'dark' ? \"text-white\" : \"mb-2 lh-condensed\"}>{user.name ? user.name : user.login}</h1>\n      <p className={`mb-3 f4 ${style === 'dark' ? 'text-white' : 'text-gray'}`}>\n        <Emoji text={user.bio || ''} />\n      </p>\n      {metaData &&\n        <div className=\"f4 mb-6\">\n          {user.name &&\n            <div className={metadata_styles}>\n              <span style={{ color: theme.iconColor }}><Octicon icon={MarkGithub} size={20} verticalAlign='middle' className=\"mr-2\" ariaLabel=\"GitHub\" /></span>\n              <a href={`https://github.com/${user.login}`} className={style === 'dark' ? \"text-white\" : \"\"}>\n                @{user.login}\n              </a>\n            </div>\n          }\n          {user.email &&\n            <div className={metadata_styles}>\n              <span style={{ color: theme.iconColor }}><Octicon icon={Mail} size={20} verticalAlign='middle' className=\"mr-2\" ariaLabel=\"email\" /></span>\n              <a href={`mailto:${user.email}`} className={style === 'dark' ? \"text-white\" : \"\"}>\n                {user.email}\n              </a>\n            </div>\n          }\n          {user.location &&\n            <div className={`${metadata_styles} ` + (style === 'dark' && \"text-white\")}>\n              <span style={{ color: theme.iconColor }}><Octicon icon={Location} size={20} verticalAlign='middle' className=\"mr-2\" ariaLabel=\"Location\" /></span>\n              {user.location}\n            </div>\n          }\n          {user.isHireable &&\n            <span title=\"Hire me\" className=\"d-inline-block f5 rounded-2 text-white bg-green py-1 px-2\">Available for hire</span>\n          }\n        </div>\n      }\n    </>\n  )\n}\n\nexport default mastHead\n","import React, { useContext } from 'react'\nimport { Link } from \"gatsby\"\nimport { ThemeContext } from \"../theme-context\"\n\nexport function formatePostDate(dateString) {\n  const date = new Date(dateString)\n  return `${date.toLocaleDateString('en-GB', { month: 'short' })} ${date.toLocaleDateString('en-GB', { day: 'numeric' })}, ${date.toLocaleDateString('en-GB', { year: 'numeric' })}`\n}\n\nfunction PostCard({ post }) {\n  const { state: { style } } = useContext(ThemeContext)\n  return (\n    <div className={`height-full text-left ${style === 'dark' ? 'box-shadow' : 'border border - gray - light'} bg-white rounded-1 p-3`}>\n      < div className=\"d-flex flex-justify-between flex-items-start mb-1\">\n        <h1 className=\"f4 lh-condensed mb-1\">\n          <Link to={post.fields.slug}>\n            {post.frontmatter.title}\n          </Link>\n        </h1>\n      </div>\n      <div className=\"text-gray mb-2 ws-normal\">{formatePostDate(`${post.fields.postDate}`)}</div>\n    </div>\n\n  )\n}\n\nexport default PostCard\n"],"sourceRoot":""}